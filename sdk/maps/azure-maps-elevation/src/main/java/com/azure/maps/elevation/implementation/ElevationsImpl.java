// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.elevation.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.elevation.fluent.ElevationsClient;
import com.azure.maps.elevation.fluent.models.BoundingBoxResultInner;
import com.azure.maps.elevation.fluent.models.LinesResultInner;
import com.azure.maps.elevation.fluent.models.PointsResultInner;
import com.azure.maps.elevation.models.BoundingBoxResult;
import com.azure.maps.elevation.models.CoordinatesPairAbbreviated;
import com.azure.maps.elevation.models.Elevations;
import com.azure.maps.elevation.models.LinesResult;
import com.azure.maps.elevation.models.PointsResult;
import com.azure.maps.elevation.models.ResponseFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.List;

public final class ElevationsImpl implements Elevations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ElevationsImpl.class);

    private final ElevationsClient innerClient;

    private final com.azure.maps.elevation.ElevationManager serviceManager;

    public ElevationsImpl(ElevationsClient innerClient, com.azure.maps.elevation.ElevationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PointsResult getDataForPoints(ResponseFormat format, List<String> points) {
        PointsResultInner inner = this.serviceClient().getDataForPoints(format, points);
        if (inner != null) {
            return new PointsResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PointsResult> getDataForPointsWithResponse(
        ResponseFormat format, List<String> points, Context context) {
        Response<PointsResultInner> inner = this.serviceClient().getDataForPointsWithResponse(format, points, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PointsResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PointsResult postDataForPoints(ResponseFormat format, List<CoordinatesPairAbbreviated> pointsRequestBody) {
        PointsResultInner inner = this.serviceClient().postDataForPoints(format, pointsRequestBody);
        if (inner != null) {
            return new PointsResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PointsResult> postDataForPointsWithResponse(
        ResponseFormat format, List<CoordinatesPairAbbreviated> pointsRequestBody, Context context) {
        Response<PointsResultInner> inner =
            this.serviceClient().postDataForPointsWithResponse(format, pointsRequestBody, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PointsResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public LinesResult getDataForPolyline(ResponseFormat format, List<String> lines) {
        LinesResultInner inner = this.serviceClient().getDataForPolyline(format, lines);
        if (inner != null) {
            return new LinesResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<LinesResult> getDataForPolylineWithResponse(
        ResponseFormat format, List<String> lines, Integer samples, Context context) {
        Response<LinesResultInner> inner =
            this.serviceClient().getDataForPolylineWithResponse(format, lines, samples, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new LinesResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public LinesResult postDataForPolyline(ResponseFormat format, List<CoordinatesPairAbbreviated> linesRequestBody) {
        LinesResultInner inner = this.serviceClient().postDataForPolyline(format, linesRequestBody);
        if (inner != null) {
            return new LinesResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<LinesResult> postDataForPolylineWithResponse(
        ResponseFormat format, List<CoordinatesPairAbbreviated> linesRequestBody, Integer samples, Context context) {
        Response<LinesResultInner> inner =
            this.serviceClient().postDataForPolylineWithResponse(format, linesRequestBody, samples, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new LinesResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BoundingBoxResult getDataForBoundingBox(ResponseFormat format, List<String> bounds, int rows, int columns) {
        BoundingBoxResultInner inner = this.serviceClient().getDataForBoundingBox(format, bounds, rows, columns);
        if (inner != null) {
            return new BoundingBoxResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BoundingBoxResult> getDataForBoundingBoxWithResponse(
        ResponseFormat format, List<String> bounds, int rows, int columns, Context context) {
        Response<BoundingBoxResultInner> inner =
            this.serviceClient().getDataForBoundingBoxWithResponse(format, bounds, rows, columns, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new BoundingBoxResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ElevationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.maps.elevation.ElevationManager manager() {
        return this.serviceManager;
    }
}
