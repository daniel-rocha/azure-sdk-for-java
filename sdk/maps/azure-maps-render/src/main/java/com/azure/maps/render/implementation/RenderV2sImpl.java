// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.render.implementation;

import com.azure.core.http.rest.StreamResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.render.fluent.RenderV2sClient;
import com.azure.maps.render.models.RenderV2s;
import com.azure.maps.render.models.TileSize;
import com.azure.maps.render.models.TilesetId;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.io.InputStream;

public final class RenderV2sImpl implements RenderV2s {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RenderV2sImpl.class);

    private final RenderV2sClient innerClient;

    private final com.azure.maps.render.RenderManager serviceManager;

    public RenderV2sImpl(RenderV2sClient innerClient, com.azure.maps.render.RenderManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public InputStream getMapTilePreview(TilesetId tilesetId, int zoom, int xTileIndex, int yTileIndex) {
        return this.serviceClient().getMapTilePreview(tilesetId, zoom, xTileIndex, yTileIndex);
    }

    public StreamResponse getMapTilePreviewWithResponse(
        TilesetId tilesetId,
        int zoom,
        int xTileIndex,
        int yTileIndex,
        String timestamp,
        TileSize tileSize,
        String language,
        String view,
        Context context) {
        return this
            .serviceClient()
            .getMapTilePreviewWithResponse(
                tilesetId, zoom, xTileIndex, yTileIndex, timestamp, tileSize, language, view, context);
    }

    private RenderV2sClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.maps.render.RenderManager manager() {
        return this.serviceManager;
    }
}
