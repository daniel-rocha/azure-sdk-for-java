// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.render.implementation;

import com.azure.maps.render.fluent.models.MapTilesetResultV2Inner;
import com.azure.maps.render.models.MapTilesetResultV2;
import java.util.Collections;
import java.util.List;

public final class MapTilesetResultV2Impl implements MapTilesetResultV2 {
    private MapTilesetResultV2Inner innerObject;

    private final com.azure.maps.render.RenderManager serviceManager;

    MapTilesetResultV2Impl(MapTilesetResultV2Inner innerObject, com.azure.maps.render.RenderManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String tilejson() {
        return this.innerModel().tilejson();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String description() {
        return this.innerModel().description();
    }

    public String version() {
        return this.innerModel().version();
    }

    public String attribution() {
        return this.innerModel().attribution();
    }

    public String template() {
        return this.innerModel().template();
    }

    public String legend() {
        return this.innerModel().legend();
    }

    public String scheme() {
        return this.innerModel().scheme();
    }

    public List<String> tiles() {
        List<String> inner = this.innerModel().tiles();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> grids() {
        List<String> inner = this.innerModel().grids();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> data() {
        List<String> inner = this.innerModel().data();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Integer minzoom() {
        return this.innerModel().minzoom();
    }

    public Integer maxzoom() {
        return this.innerModel().maxzoom();
    }

    public List<Float> bounds() {
        List<Float> inner = this.innerModel().bounds();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<Float> center() {
        List<Float> inner = this.innerModel().center();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public MapTilesetResultV2Inner innerModel() {
        return this.innerObject;
    }

    private com.azure.maps.render.RenderManager manager() {
        return this.serviceManager;
    }
}
