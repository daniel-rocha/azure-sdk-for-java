// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.traffic.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Viewport Response object. */
@Immutable
public final class TrafficIncidentViewportResultViewpResp {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TrafficIncidentViewportResultViewpResp.class);

    /*
     * Traffic State array
     */
    @JsonProperty(value = "trafficState", access = JsonProperty.Access.WRITE_ONLY)
    private TrafficIncidentViewportResultViewpRespTrafficState trafficState;

    /*
     * Copyright Ids property
     */
    @JsonProperty(value = "copyrightIds", access = JsonProperty.Access.WRITE_ONLY)
    private String copyrightIds;

    /*
     * @Version property
     */
    @JsonProperty(value = "@version", access = JsonProperty.Access.WRITE_ONLY)
    private String version;

    /*
     * @maps property
     */
    @JsonProperty(value = "@maps", access = JsonProperty.Access.WRITE_ONLY)
    private String maps;

    /**
     * Get the trafficState property: Traffic State array.
     *
     * @return the trafficState value.
     */
    public TrafficIncidentViewportResultViewpRespTrafficState trafficState() {
        return this.trafficState;
    }

    /**
     * Get the copyrightIds property: Copyright Ids property.
     *
     * @return the copyrightIds value.
     */
    public String copyrightIds() {
        return this.copyrightIds;
    }

    /**
     * Get the version property: @Version property.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Get the maps property: @maps property.
     *
     * @return the maps value.
     */
    public String maps() {
        return this.maps;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (trafficState() != null) {
            trafficState().validate();
        }
    }
}
