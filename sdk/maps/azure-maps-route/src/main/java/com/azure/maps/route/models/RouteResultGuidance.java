// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.route.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Contains guidance related elements. This field is present only when guidance was requested and is available. */
@Immutable
public final class RouteResultGuidance {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RouteResultGuidance.class);

    /*
     * A list of instructions describing maneuvers.
     */
    @JsonProperty(value = "instructions", access = JsonProperty.Access.WRITE_ONLY)
    private List<RouteResultInstruction> instructions;

    /*
     * Groups a sequence of instruction elements which are related to each
     * other.
     */
    @JsonProperty(value = "instructionGroups", access = JsonProperty.Access.WRITE_ONLY)
    private List<RouteResultInstructionGroup> instructionGroups;

    /**
     * Get the instructions property: A list of instructions describing maneuvers.
     *
     * @return the instructions value.
     */
    public List<RouteResultInstruction> instructions() {
        return this.instructions;
    }

    /**
     * Get the instructionGroups property: Groups a sequence of instruction elements which are related to each other.
     *
     * @return the instructionGroups value.
     */
    public List<RouteResultInstructionGroup> instructionGroups() {
        return this.instructionGroups;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (instructions() != null) {
            instructions().forEach(e -> e.validate());
        }
        if (instructionGroups() != null) {
            instructionGroups().forEach(e -> e.validate());
        }
    }
}
