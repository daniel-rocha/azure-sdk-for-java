// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.route.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.route.models.RouteRange;
import com.azure.maps.route.models.RouteResponseReport;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** This object is returned from a successful Route Reachable Range call. */
@Fluent
public final class GetRouteRangeResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GetRouteRangeResponseInner.class);

    /*
     * Format Version property
     */
    @JsonProperty(value = "formatVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String formatVersion;

    /*
     * Reachable Range
     */
    @JsonProperty(value = "reachableRange")
    private RouteRange reachableRange;

    /*
     * Reports the effective settings used in the current call.
     */
    @JsonProperty(value = "report")
    private RouteResponseReport report;

    /**
     * Get the formatVersion property: Format Version property.
     *
     * @return the formatVersion value.
     */
    public String formatVersion() {
        return this.formatVersion;
    }

    /**
     * Get the reachableRange property: Reachable Range.
     *
     * @return the reachableRange value.
     */
    public RouteRange reachableRange() {
        return this.reachableRange;
    }

    /**
     * Set the reachableRange property: Reachable Range.
     *
     * @param reachableRange the reachableRange value to set.
     * @return the GetRouteRangeResponseInner object itself.
     */
    public GetRouteRangeResponseInner withReachableRange(RouteRange reachableRange) {
        this.reachableRange = reachableRange;
        return this;
    }

    /**
     * Get the report property: Reports the effective settings used in the current call.
     *
     * @return the report value.
     */
    public RouteResponseReport report() {
        return this.report;
    }

    /**
     * Set the report property: Reports the effective settings used in the current call.
     *
     * @param report the report value to set.
     * @return the GetRouteRangeResponseInner object itself.
     */
    public GetRouteRangeResponseInner withReport(RouteResponseReport report) {
        this.report = report;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (reachableRange() != null) {
            reachableRange().validate();
        }
        if (report() != null) {
            report().validate();
        }
    }
}
