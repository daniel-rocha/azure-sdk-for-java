// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.route.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The cause of the traffic event. Can contain mainCauseCode and subCauseCode elements. Can be used to define
 * iconography and descriptions.
 */
@Immutable
public final class RouteResultSectionTecCause {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RouteResultSectionTecCause.class);

    /*
     * The main cause of the traffic event. Contains a value in the
     * tec002:CauseCode table, as defined in the
     * [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard.
     */
    @JsonProperty(value = "mainCauseCode", access = JsonProperty.Access.WRITE_ONLY)
    private Integer mainCauseCode;

    /*
     * The subcause of the traffic event. Contains a value in the sub cause
     * table defined by the mainCauseCode, as defined in the
     * [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard.
     */
    @JsonProperty(value = "subCauseCode", access = JsonProperty.Access.WRITE_ONLY)
    private Integer subCauseCode;

    /**
     * Get the mainCauseCode property: The main cause of the traffic event. Contains a value in the tec002:CauseCode
     * table, as defined in the [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard.
     *
     * @return the mainCauseCode value.
     */
    public Integer mainCauseCode() {
        return this.mainCauseCode;
    }

    /**
     * Get the subCauseCode property: The subcause of the traffic event. Contains a value in the sub cause table defined
     * by the mainCauseCode, as defined in the [TPEG2-TEC](https://www.iso.org/standard/63116.html) standard.
     *
     * @return the subCauseCode value.
     */
    public Integer subCauseCode() {
        return this.subCauseCode;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
