// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.timezone.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The TimeTransition model. */
@Immutable
public final class TimeTransition {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TimeTransition.class);

    /*
     * Tag property
     */
    @JsonProperty(value = "Tag", access = JsonProperty.Access.WRITE_ONLY)
    private String tag;

    /*
     * StandardOffset property
     */
    @JsonProperty(value = "StandardOffset", access = JsonProperty.Access.WRITE_ONLY)
    private String standardOffset;

    /*
     * DaylightSavings property
     */
    @JsonProperty(value = "DaylightSavings", access = JsonProperty.Access.WRITE_ONLY)
    private String daylightSavings;

    /*
     * Start date, start time for this transition period
     */
    @JsonProperty(value = "UtcStart", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime utcStart;

    /*
     * End date, end time for this transition period
     */
    @JsonProperty(value = "UtcEnd", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime utcEnd;

    /**
     * Get the tag property: Tag property.
     *
     * @return the tag value.
     */
    public String tag() {
        return this.tag;
    }

    /**
     * Get the standardOffset property: StandardOffset property.
     *
     * @return the standardOffset value.
     */
    public String standardOffset() {
        return this.standardOffset;
    }

    /**
     * Get the daylightSavings property: DaylightSavings property.
     *
     * @return the daylightSavings value.
     */
    public String daylightSavings() {
        return this.daylightSavings;
    }

    /**
     * Get the utcStart property: Start date, start time for this transition period.
     *
     * @return the utcStart value.
     */
    public OffsetDateTime utcStart() {
        return this.utcStart;
    }

    /**
     * Get the utcEnd property: End date, end time for this transition period.
     *
     * @return the utcEnd value.
     */
    public OffsetDateTime utcEnd() {
        return this.utcEnd;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
