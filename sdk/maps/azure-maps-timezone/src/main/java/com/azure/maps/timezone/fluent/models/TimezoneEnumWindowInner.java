// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.timezone.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The TimezoneEnumWindow model. */
@Fluent
public final class TimezoneEnumWindowInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TimezoneEnumWindowInner.class);

    /*
     * Windows Id property
     */
    @JsonProperty(value = "WindowsId", access = JsonProperty.Access.WRITE_ONLY)
    private String windowsId;

    /*
     * Territory property
     */
    @JsonProperty(value = "Territory", access = JsonProperty.Access.WRITE_ONLY)
    private String territory;

    /*
     * IanaIds array
     */
    @JsonProperty(value = "IanaIds")
    private List<String> ianaIds;

    /**
     * Get the windowsId property: Windows Id property.
     *
     * @return the windowsId value.
     */
    public String windowsId() {
        return this.windowsId;
    }

    /**
     * Get the territory property: Territory property.
     *
     * @return the territory value.
     */
    public String territory() {
        return this.territory;
    }

    /**
     * Get the ianaIds property: IanaIds array.
     *
     * @return the ianaIds value.
     */
    public List<String> ianaIds() {
        return this.ianaIds;
    }

    /**
     * Set the ianaIds property: IanaIds array.
     *
     * @param ianaIds the ianaIds value to set.
     * @return the TimezoneEnumWindowInner object itself.
     */
    public TimezoneEnumWindowInner withIanaIds(List<String> ianaIds) {
        this.ianaIds = ianaIds;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
