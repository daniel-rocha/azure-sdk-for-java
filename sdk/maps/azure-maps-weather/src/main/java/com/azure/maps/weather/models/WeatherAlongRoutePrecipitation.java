// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Precipitation forecast of the weather along the route. */
@Fluent
public final class WeatherAlongRoutePrecipitation {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WeatherAlongRoutePrecipitation.class);

    /*
     * The forecasted precipitation intensity in dBZ (decibels relative to Z)
     * from 0.0 to 100.0.
     */
    @JsonProperty(value = "dbz")
    private Double dbz;

    /*
     * Precipitation type. If precipitation should occur, the type that it will
     * be: "RAIN," "HAIL," "SNOW," "ICE," or "MIX."
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the dbz property: The forecasted precipitation intensity in dBZ (decibels relative to Z) from 0.0 to 100.0.
     *
     * @return the dbz value.
     */
    public Double dbz() {
        return this.dbz;
    }

    /**
     * Set the dbz property: The forecasted precipitation intensity in dBZ (decibels relative to Z) from 0.0 to 100.0.
     *
     * @param dbz the dbz value to set.
     * @return the WeatherAlongRoutePrecipitation object itself.
     */
    public WeatherAlongRoutePrecipitation withDbz(Double dbz) {
        this.dbz = dbz;
        return this;
    }

    /**
     * Get the type property: Precipitation type. If precipitation should occur, the type that it will be: "RAIN,"
     * "HAIL," "SNOW," "ICE," or "MIX.".
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Precipitation type. If precipitation should occur, the type that it will be: "RAIN,"
     * "HAIL," "SNOW," "ICE," or "MIX.".
     *
     * @param type the type value to set.
     * @return the WeatherAlongRoutePrecipitation object itself.
     */
    public WeatherAlongRoutePrecipitation withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
