// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.weather.models.QuarterDayForecast;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The QuarterDayForecastResponse model. */
@Fluent
public final class QuarterDayForecastResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(QuarterDayForecastResponseInner.class);

    /*
     * Forecast data for each quarter in the response.
     */
    @JsonProperty(value = "forecasts")
    private List<QuarterDayForecast> forecasts;

    /**
     * Get the forecasts property: Forecast data for each quarter in the response.
     *
     * @return the forecasts value.
     */
    public List<QuarterDayForecast> forecasts() {
        return this.forecasts;
    }

    /**
     * Set the forecasts property: Forecast data for each quarter in the response.
     *
     * @param forecasts the forecasts value to set.
     * @return the QuarterDayForecastResponseInner object itself.
     */
    public QuarterDayForecastResponseInner withForecasts(List<QuarterDayForecast> forecasts) {
        this.forecasts = forecasts;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (forecasts() != null) {
            forecasts().forEach(e -> e.validate());
        }
    }
}
