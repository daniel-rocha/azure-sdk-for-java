// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Phrase summaries for the entire forecast period. */
@Fluent
public final class MinuteForecastSummary {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MinuteForecastSummary.class);

    /*
     * Summary phrase for the next 60 minutes. Phrase length is approximately
     * 60 characters.
     */
    @JsonProperty(value = "briefPhrase60")
    private String briefPhrase60;

    /*
     * Short summary phrase for the next 120 minutes. Phrase length is
     * approximately 25 characters.
     */
    @JsonProperty(value = "shortPhrase")
    private String shortPhrase;

    /*
     * Summary phrase for the next 120 minutes. Phrase length is approximately
     * 60 characters.
     */
    @JsonProperty(value = "briefPhrase")
    private String briefPhrase;

    /*
     * Long summary phrase for the next 120 minutes. Phrase length is 60+
     * characters.
     */
    @JsonProperty(value = "longPhrase")
    private String longPhrase;

    /*
     * Numeric value representing an image that displays the `iconPhrase`.
     * Please refer to [Weather Service
     * Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     */
    @JsonProperty(value = "iconCode")
    private Integer iconCode;

    /**
     * Get the briefPhrase60 property: Summary phrase for the next 60 minutes. Phrase length is approximately 60
     * characters.
     *
     * @return the briefPhrase60 value.
     */
    public String briefPhrase60() {
        return this.briefPhrase60;
    }

    /**
     * Set the briefPhrase60 property: Summary phrase for the next 60 minutes. Phrase length is approximately 60
     * characters.
     *
     * @param briefPhrase60 the briefPhrase60 value to set.
     * @return the MinuteForecastSummary object itself.
     */
    public MinuteForecastSummary withBriefPhrase60(String briefPhrase60) {
        this.briefPhrase60 = briefPhrase60;
        return this;
    }

    /**
     * Get the shortPhrase property: Short summary phrase for the next 120 minutes. Phrase length is approximately 25
     * characters.
     *
     * @return the shortPhrase value.
     */
    public String shortPhrase() {
        return this.shortPhrase;
    }

    /**
     * Set the shortPhrase property: Short summary phrase for the next 120 minutes. Phrase length is approximately 25
     * characters.
     *
     * @param shortPhrase the shortPhrase value to set.
     * @return the MinuteForecastSummary object itself.
     */
    public MinuteForecastSummary withShortPhrase(String shortPhrase) {
        this.shortPhrase = shortPhrase;
        return this;
    }

    /**
     * Get the briefPhrase property: Summary phrase for the next 120 minutes. Phrase length is approximately 60
     * characters.
     *
     * @return the briefPhrase value.
     */
    public String briefPhrase() {
        return this.briefPhrase;
    }

    /**
     * Set the briefPhrase property: Summary phrase for the next 120 minutes. Phrase length is approximately 60
     * characters.
     *
     * @param briefPhrase the briefPhrase value to set.
     * @return the MinuteForecastSummary object itself.
     */
    public MinuteForecastSummary withBriefPhrase(String briefPhrase) {
        this.briefPhrase = briefPhrase;
        return this;
    }

    /**
     * Get the longPhrase property: Long summary phrase for the next 120 minutes. Phrase length is 60+ characters.
     *
     * @return the longPhrase value.
     */
    public String longPhrase() {
        return this.longPhrase;
    }

    /**
     * Set the longPhrase property: Long summary phrase for the next 120 minutes. Phrase length is 60+ characters.
     *
     * @param longPhrase the longPhrase value to set.
     * @return the MinuteForecastSummary object itself.
     */
    public MinuteForecastSummary withLongPhrase(String longPhrase) {
        this.longPhrase = longPhrase;
        return this;
    }

    /**
     * Get the iconCode property: Numeric value representing an image that displays the `iconPhrase`. Please refer to
     * [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     *
     * @return the iconCode value.
     */
    public Integer iconCode() {
        return this.iconCode;
    }

    /**
     * Set the iconCode property: Numeric value representing an image that displays the `iconPhrase`. Please refer to
     * [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     *
     * @param iconCode the iconCode value to set.
     * @return the MinuteForecastSummary object itself.
     */
    public MinuteForecastSummary withIconCode(Integer iconCode) {
        this.iconCode = iconCode;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
