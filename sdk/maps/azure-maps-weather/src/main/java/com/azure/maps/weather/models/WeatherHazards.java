// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Description of the weather hazard affecting the trip. */
@Fluent
public final class WeatherHazards {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WeatherHazards.class);

    /*
     * A severity/hazard index.
     * * `0` - No hazard.
     * * `1` - Be informed, be aware.
     * * `2` - Pay attention, be prepared.
     * * `3` - Take action.
     * * `4` - Life threatening, emergency.
     */
    @JsonProperty(value = "maxHazardIndex")
    private Integer maxHazardIndex;

    /*
     * Details of the weather hazards affecting the trip.
     */
    @JsonProperty(value = "hazardDetails")
    private List<HazardDetail> hazardDetails;

    /**
     * Get the maxHazardIndex property: A severity/hazard index. * `0` - No hazard. * `1` - Be informed, be aware. * `2`
     * - Pay attention, be prepared. * `3` - Take action. * `4` - Life threatening, emergency.
     *
     * @return the maxHazardIndex value.
     */
    public Integer maxHazardIndex() {
        return this.maxHazardIndex;
    }

    /**
     * Set the maxHazardIndex property: A severity/hazard index. * `0` - No hazard. * `1` - Be informed, be aware. * `2`
     * - Pay attention, be prepared. * `3` - Take action. * `4` - Life threatening, emergency.
     *
     * @param maxHazardIndex the maxHazardIndex value to set.
     * @return the WeatherHazards object itself.
     */
    public WeatherHazards withMaxHazardIndex(Integer maxHazardIndex) {
        this.maxHazardIndex = maxHazardIndex;
        return this;
    }

    /**
     * Get the hazardDetails property: Details of the weather hazards affecting the trip.
     *
     * @return the hazardDetails value.
     */
    public List<HazardDetail> hazardDetails() {
        return this.hazardDetails;
    }

    /**
     * Set the hazardDetails property: Details of the weather hazards affecting the trip.
     *
     * @param hazardDetails the hazardDetails value to set.
     * @return the WeatherHazards object itself.
     */
    public WeatherHazards withHazardDetails(List<HazardDetail> hazardDetails) {
        this.hazardDetails = hazardDetails;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hazardDetails() != null) {
            hazardDetails().forEach(e -> e.validate());
        }
    }
}
