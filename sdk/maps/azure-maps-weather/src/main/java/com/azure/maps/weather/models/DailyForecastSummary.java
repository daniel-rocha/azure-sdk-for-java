// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Summary for the main conditions for the requested time period. Notice that summary can cover only part of the time
 * period.
 */
@Fluent
public final class DailyForecastSummary {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DailyForecastSummary.class);

    /*
     * Date and time that the summary is in effect, displayed in ISO 8601
     * format, for example, 2019-10-27T19:39:57-08:00.
     */
    @JsonProperty(value = "startDate")
    private String startDate;

    /*
     * Date and time that the summary period ends, displayed in ISO 8601
     * format, for example, 2019-10-27T19:39:57-08:00.
     */
    @JsonProperty(value = "endDate")
    private String endDate;

    /*
     * severity
     */
    @JsonProperty(value = "severity")
    private Integer severity;

    /*
     * Summary phrase of the daily forecast.  Displayed in specified language.
     */
    @JsonProperty(value = "phrase")
    private String phrase;

    /*
     * one or 2 word(s) to summarize the phrase.
     */
    @JsonProperty(value = "category")
    private String category;

    /**
     * Get the startDate property: Date and time that the summary is in effect, displayed in ISO 8601 format, for
     * example, 2019-10-27T19:39:57-08:00.
     *
     * @return the startDate value.
     */
    public String startDate() {
        return this.startDate;
    }

    /**
     * Set the startDate property: Date and time that the summary is in effect, displayed in ISO 8601 format, for
     * example, 2019-10-27T19:39:57-08:00.
     *
     * @param startDate the startDate value to set.
     * @return the DailyForecastSummary object itself.
     */
    public DailyForecastSummary withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Get the endDate property: Date and time that the summary period ends, displayed in ISO 8601 format, for example,
     * 2019-10-27T19:39:57-08:00.
     *
     * @return the endDate value.
     */
    public String endDate() {
        return this.endDate;
    }

    /**
     * Set the endDate property: Date and time that the summary period ends, displayed in ISO 8601 format, for example,
     * 2019-10-27T19:39:57-08:00.
     *
     * @param endDate the endDate value to set.
     * @return the DailyForecastSummary object itself.
     */
    public DailyForecastSummary withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * Get the severity property: severity.
     *
     * @return the severity value.
     */
    public Integer severity() {
        return this.severity;
    }

    /**
     * Set the severity property: severity.
     *
     * @param severity the severity value to set.
     * @return the DailyForecastSummary object itself.
     */
    public DailyForecastSummary withSeverity(Integer severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the phrase property: Summary phrase of the daily forecast. Displayed in specified language.
     *
     * @return the phrase value.
     */
    public String phrase() {
        return this.phrase;
    }

    /**
     * Set the phrase property: Summary phrase of the daily forecast. Displayed in specified language.
     *
     * @param phrase the phrase value to set.
     * @return the DailyForecastSummary object itself.
     */
    public DailyForecastSummary withPhrase(String phrase) {
        this.phrase = phrase;
        return this;
    }

    /**
     * Get the category property: one or 2 word(s) to summarize the phrase.
     *
     * @return the category value.
     */
    public String category() {
        return this.category;
    }

    /**
     * Set the category property: one or 2 word(s) to summarize the phrase.
     *
     * @param category the category value to set.
     * @return the DailyForecastSummary object itself.
     */
    public DailyForecastSummary withCategory(String category) {
        this.category = category;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
