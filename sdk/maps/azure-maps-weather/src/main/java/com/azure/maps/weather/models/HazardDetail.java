// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The HazardDetail model. */
@Fluent
public final class HazardDetail {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HazardDetail.class);

    /*
     * A severity/hazard index.
     * * `0` - No hazard.
     * * `1` - Be informed, be aware.
     * * `2` - Pay attention, be prepared.
     * * `3` - Take action.
     * * `4` - Life threatening, emergency.
     */
    @JsonProperty(value = "hazardIndex")
    private Integer hazardIndex;

    /*
     * A unique identifier (non-displayable) for each type of hazard:
     * LightRain, ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix,
     * LightSnow, ModerateSnow, HeavySnow, LightIce, ModerateIce, HeavyIce,
     * Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning,
     * WindModerate, WindHigh, WindExtreme, FloodWarning, FlashFloodWarning,
     * TornadoWarning, TsunamiWarning, SevereThunderstormWarning.
     */
    @JsonProperty(value = "hazardCode")
    private String hazardCode;

    /*
     * A displayable short phrase describing the forecasted conditions and
     * precipitation intensity/type.
     */
    @JsonProperty(value = "shortPhrase")
    private String shortPhrase;

    /**
     * Get the hazardIndex property: A severity/hazard index. * `0` - No hazard. * `1` - Be informed, be aware. * `2` -
     * Pay attention, be prepared. * `3` - Take action. * `4` - Life threatening, emergency.
     *
     * @return the hazardIndex value.
     */
    public Integer hazardIndex() {
        return this.hazardIndex;
    }

    /**
     * Set the hazardIndex property: A severity/hazard index. * `0` - No hazard. * `1` - Be informed, be aware. * `2` -
     * Pay attention, be prepared. * `3` - Take action. * `4` - Life threatening, emergency.
     *
     * @param hazardIndex the hazardIndex value to set.
     * @return the HazardDetail object itself.
     */
    public HazardDetail withHazardIndex(Integer hazardIndex) {
        this.hazardIndex = hazardIndex;
        return this;
    }

    /**
     * Get the hazardCode property: A unique identifier (non-displayable) for each type of hazard: LightRain,
     * ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce,
     * ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning, WindModerate,
     * WindHigh, WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning,
     * SevereThunderstormWarning.
     *
     * @return the hazardCode value.
     */
    public String hazardCode() {
        return this.hazardCode;
    }

    /**
     * Set the hazardCode property: A unique identifier (non-displayable) for each type of hazard: LightRain,
     * ModerateRain, HeavyRain, LightMix, ModerateMix, HeavyMix, LightSnow, ModerateSnow, HeavySnow, LightIce,
     * ModerateIce, HeavyIce, Hail, LargeHail, SunGlare, SunGlareHigh, Lightning, SevereLightning, WindModerate,
     * WindHigh, WindExtreme, FloodWarning, FlashFloodWarning, TornadoWarning, TsunamiWarning,
     * SevereThunderstormWarning.
     *
     * @param hazardCode the hazardCode value to set.
     * @return the HazardDetail object itself.
     */
    public HazardDetail withHazardCode(String hazardCode) {
        this.hazardCode = hazardCode;
        return this;
    }

    /**
     * Get the shortPhrase property: A displayable short phrase describing the forecasted conditions and precipitation
     * intensity/type.
     *
     * @return the shortPhrase value.
     */
    public String shortPhrase() {
        return this.shortPhrase;
    }

    /**
     * Set the shortPhrase property: A displayable short phrase describing the forecasted conditions and precipitation
     * intensity/type.
     *
     * @param shortPhrase the shortPhrase value to set.
     * @return the HazardDetail object itself.
     */
    public HazardDetail withShortPhrase(String shortPhrase) {
        this.shortPhrase = shortPhrase;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
