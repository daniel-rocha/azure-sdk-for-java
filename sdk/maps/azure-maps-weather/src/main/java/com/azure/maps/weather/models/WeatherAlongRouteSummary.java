// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Short summary of the weather along the route. */
@Fluent
public final class WeatherAlongRouteSummary {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WeatherAlongRouteSummary.class);

    /*
     * Numeric value representing an image that displays the `iconPhrase`.
     * Please refer to [Weather Service
     * Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     */
    @JsonProperty(value = "iconCode")
    private Integer iconCode;

    /*
     * Description of the weather hazard affecting the trip.
     */
    @JsonProperty(value = "hazards")
    private WeatherHazards hazards;

    /**
     * Get the iconCode property: Numeric value representing an image that displays the `iconPhrase`. Please refer to
     * [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     *
     * @return the iconCode value.
     */
    public Integer iconCode() {
        return this.iconCode;
    }

    /**
     * Set the iconCode property: Numeric value representing an image that displays the `iconPhrase`. Please refer to
     * [Weather Service Concepts](https://aka.ms/AzureMapsWeatherConcepts) for details.
     *
     * @param iconCode the iconCode value to set.
     * @return the WeatherAlongRouteSummary object itself.
     */
    public WeatherAlongRouteSummary withIconCode(Integer iconCode) {
        this.iconCode = iconCode;
        return this;
    }

    /**
     * Get the hazards property: Description of the weather hazard affecting the trip.
     *
     * @return the hazards value.
     */
    public WeatherHazards hazards() {
        return this.hazards;
    }

    /**
     * Set the hazards property: Description of the weather hazard affecting the trip.
     *
     * @param hazards the hazards value to set.
     * @return the WeatherAlongRouteSummary object itself.
     */
    public WeatherAlongRouteSummary withHazards(WeatherHazards hazards) {
        this.hazards = hazards;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (hazards() != null) {
            hazards().validate();
        }
    }
}
