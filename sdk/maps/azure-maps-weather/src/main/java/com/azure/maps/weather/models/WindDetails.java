// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.weather.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Wind details being returned including speed and direction. */
@Fluent
public final class WindDetails {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WindDetails.class);

    /*
     * Wind direction
     */
    @JsonProperty(value = "direction")
    private WindDirection direction;

    /*
     * Speed of the wind in specified unit.
     */
    @JsonProperty(value = "speed")
    private WindSpeed speed;

    /**
     * Get the direction property: Wind direction.
     *
     * @return the direction value.
     */
    public WindDirection direction() {
        return this.direction;
    }

    /**
     * Set the direction property: Wind direction.
     *
     * @param direction the direction value to set.
     * @return the WindDetails object itself.
     */
    public WindDetails withDirection(WindDirection direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get the speed property: Speed of the wind in specified unit.
     *
     * @return the speed value.
     */
    public WindSpeed speed() {
        return this.speed;
    }

    /**
     * Set the speed property: Speed of the wind in specified unit.
     *
     * @param speed the speed value to set.
     * @return the WindDetails object itself.
     */
    public WindDetails withSpeed(WindSpeed speed) {
        this.speed = speed;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (direction() != null) {
            direction().validate();
        }
        if (speed() != null) {
            speed().validate();
        }
    }
}
