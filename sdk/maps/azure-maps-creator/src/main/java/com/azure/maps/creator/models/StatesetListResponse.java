// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The response model for the successful Stateset List API. */
@Fluent
public final class StatesetListResponse {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(StatesetListResponse.class);

    /*
     * A list of statesets information.
     */
    @JsonProperty(value = "statesets")
    private List<StatesetInfoObject> statesets;

    /*
     * If present, the location of the next page of data.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Get the statesets property: A list of statesets information.
     *
     * @return the statesets value.
     */
    public List<StatesetInfoObject> statesets() {
        return this.statesets;
    }

    /**
     * Set the statesets property: A list of statesets information.
     *
     * @param statesets the statesets value to set.
     * @return the StatesetListResponse object itself.
     */
    public StatesetListResponse withStatesets(List<StatesetInfoObject> statesets) {
        this.statesets = statesets;
        return this;
    }

    /**
     * Get the nextLink property: If present, the location of the next page of data.
     *
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (statesets() != null) {
            statesets().forEach(e -> e.validate());
        }
    }
}
