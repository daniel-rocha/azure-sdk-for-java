// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.creator.fluent.models.ConversionListDetailInfoInner;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The response model for the Conversion List API. */
@Immutable
public final class ConversionListResponse {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ConversionListResponse.class);

    /*
     * A list of all the previously submitted conversion requests.
     */
    @JsonProperty(value = "conversions", access = JsonProperty.Access.WRITE_ONLY)
    private List<ConversionListDetailInfoInner> conversions;

    /*
     * If present, the location of the next page of data.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Get the conversions property: A list of all the previously submitted conversion requests.
     *
     * @return the conversions value.
     */
    public List<ConversionListDetailInfoInner> conversions() {
        return this.conversions;
    }

    /**
     * Get the nextLink property: If present, the location of the next page of data.
     *
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (conversions() != null) {
            conversions().forEach(e -> e.validate());
        }
    }
}
