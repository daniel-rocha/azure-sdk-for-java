// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.creator.models.WfsEndpointLink;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The CollectionsResponse model. */
@Fluent
public final class CollectionsResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CollectionsResponseInner.class);

    /*
     * The ontology version of this dataset.
     */
    @JsonProperty(value = "ontology", access = JsonProperty.Access.WRITE_ONLY)
    private String ontology;

    /*
     * Links to other WFS endpoints.
     */
    @JsonProperty(value = "links", required = true)
    private List<WfsEndpointLink> links;

    /*
     * All the collections in a given dataset.
     */
    @JsonProperty(value = "collections", required = true)
    private List<CollectionInfoInner> collections;

    /**
     * Get the ontology property: The ontology version of this dataset.
     *
     * @return the ontology value.
     */
    public String ontology() {
        return this.ontology;
    }

    /**
     * Get the links property: Links to other WFS endpoints.
     *
     * @return the links value.
     */
    public List<WfsEndpointLink> links() {
        return this.links;
    }

    /**
     * Set the links property: Links to other WFS endpoints.
     *
     * @param links the links value to set.
     * @return the CollectionsResponseInner object itself.
     */
    public CollectionsResponseInner withLinks(List<WfsEndpointLink> links) {
        this.links = links;
        return this;
    }

    /**
     * Get the collections property: All the collections in a given dataset.
     *
     * @return the collections value.
     */
    public List<CollectionInfoInner> collections() {
        return this.collections;
    }

    /**
     * Set the collections property: All the collections in a given dataset.
     *
     * @param collections the collections value to set.
     * @return the CollectionsResponseInner object itself.
     */
    public CollectionsResponseInner withCollections(List<CollectionInfoInner> collections) {
        this.collections = collections;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (links() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property links in model CollectionsResponseInner"));
        } else {
            links().forEach(e -> e.validate());
        }
        if (collections() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property collections in model CollectionsResponseInner"));
        } else {
            collections().forEach(e -> e.validate());
        }
    }
}
