// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The DefinitionProperties model. */
@Fluent
public final class DefinitionProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DefinitionProperties.class);

    /*
     * name of attribute
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * is attribute required
     */
    @JsonProperty(value = "required", required = true)
    private boolean required;

    /*
     * type of attribute
     */
    @JsonProperty(value = "type", required = true)
    private Object type;

    /**
     * Get the name property: name of attribute.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: name of attribute.
     *
     * @param name the name value to set.
     * @return the DefinitionProperties object itself.
     */
    public DefinitionProperties withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the required property: is attribute required.
     *
     * @return the required value.
     */
    public boolean required() {
        return this.required;
    }

    /**
     * Set the required property: is attribute required.
     *
     * @param required the required value to set.
     * @return the DefinitionProperties object itself.
     */
    public DefinitionProperties withRequired(boolean required) {
        this.required = required;
        return this;
    }

    /**
     * Get the type property: type of attribute.
     *
     * @return the type value.
     */
    public Object type() {
        return this.type;
    }

    /**
     * Set the type property: type of attribute.
     *
     * @param type the type value to set.
     * @return the DefinitionProperties object itself.
     */
    public DefinitionProperties withType(Object type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (name() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property name in model DefinitionProperties"));
        }
        if (type() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property type in model DefinitionProperties"));
        }
    }
}
