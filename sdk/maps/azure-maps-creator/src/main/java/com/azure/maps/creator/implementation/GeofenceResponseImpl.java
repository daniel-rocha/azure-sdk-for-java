// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.implementation;

import com.azure.maps.creator.fluent.models.GeofenceResponseInner;
import com.azure.maps.creator.models.GeofenceGeometry;
import com.azure.maps.creator.models.GeofenceResponse;
import java.util.Collections;
import java.util.List;

public final class GeofenceResponseImpl implements GeofenceResponse {
    private GeofenceResponseInner innerObject;

    private final com.azure.maps.creator.CreatorManager serviceManager;

    GeofenceResponseImpl(GeofenceResponseInner innerObject, com.azure.maps.creator.CreatorManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public List<GeofenceGeometry> geometries() {
        List<GeofenceGeometry> inner = this.innerModel().geometries();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> expiredGeofenceGeometryId() {
        List<String> inner = this.innerModel().expiredGeofenceGeometryId();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> invalidPeriodGeofenceGeometryId() {
        List<String> inner = this.innerModel().invalidPeriodGeofenceGeometryId();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean isEventPublished() {
        return this.innerModel().isEventPublished();
    }

    public GeofenceResponseInner innerModel() {
        return this.innerObject;
    }

    private com.azure.maps.creator.CreatorManager manager() {
        return this.serviceManager;
    }
}
