// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.creator.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.creator.models.PointInPolygonResult;
import com.azure.maps.creator.models.PointInPolygonSummary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Returns true if point is within the polygon, false otherwise. */
@Fluent
public final class PointInPolygonResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PointInPolygonResponseInner.class);

    /*
     * Point In Polygon Summary object
     */
    @JsonProperty(value = "summary", access = JsonProperty.Access.WRITE_ONLY)
    private PointInPolygonSummary summary;

    /*
     * Point In Polygon Result Object
     */
    @JsonProperty(value = "result")
    private PointInPolygonResult result;

    /**
     * Get the summary property: Point In Polygon Summary object.
     *
     * @return the summary value.
     */
    public PointInPolygonSummary summary() {
        return this.summary;
    }

    /**
     * Get the result property: Point In Polygon Result Object.
     *
     * @return the result value.
     */
    public PointInPolygonResult result() {
        return this.result;
    }

    /**
     * Set the result property: Point In Polygon Result Object.
     *
     * @param result the result value to set.
     * @return the PointInPolygonResponseInner object itself.
     */
    public PointInPolygonResponseInner withResult(PointInPolygonResult result) {
        this.result = result;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (summary() != null) {
            summary().validate();
        }
        if (result() != null) {
            result().validate();
        }
    }
}
