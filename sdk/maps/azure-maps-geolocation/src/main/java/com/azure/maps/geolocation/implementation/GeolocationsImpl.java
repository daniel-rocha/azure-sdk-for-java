// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.geolocation.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.geolocation.fluent.GeolocationsClient;
import com.azure.maps.geolocation.fluent.models.IpAddressToLocationResultInner;
import com.azure.maps.geolocation.models.Geolocations;
import com.azure.maps.geolocation.models.IpAddressToLocationResult;
import com.azure.maps.geolocation.models.ResponseFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class GeolocationsImpl implements Geolocations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GeolocationsImpl.class);

    private final GeolocationsClient innerClient;

    private final com.azure.maps.geolocation.GeolocationManager serviceManager;

    public GeolocationsImpl(
        GeolocationsClient innerClient, com.azure.maps.geolocation.GeolocationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public IpAddressToLocationResult getIpToLocationPreview(ResponseFormat format, String ip) {
        IpAddressToLocationResultInner inner = this.serviceClient().getIpToLocationPreview(format, ip);
        if (inner != null) {
            return new IpAddressToLocationResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<IpAddressToLocationResult> getIpToLocationPreviewWithResponse(
        ResponseFormat format, String ip, Context context) {
        Response<IpAddressToLocationResultInner> inner =
            this.serviceClient().getIpToLocationPreviewWithResponse(format, ip, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new IpAddressToLocationResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private GeolocationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.maps.geolocation.GeolocationManager manager() {
        return this.serviceManager;
    }
}
