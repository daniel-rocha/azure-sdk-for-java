// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.geolocation.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.maps.geolocation.models.CountryRegion;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** This object is returned from a successful call to IP Address to country/region API. */
@Immutable
public final class IpAddressToLocationResultInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(IpAddressToLocationResultInner.class);

    /*
     * The object containing the country/region information.
     */
    @JsonProperty(value = "countryRegion", access = JsonProperty.Access.WRITE_ONLY)
    private CountryRegion countryRegion;

    /*
     * The IP Address of the request.
     */
    @JsonProperty(value = "ipAddress", access = JsonProperty.Access.WRITE_ONLY)
    private String ipAddress;

    /**
     * Get the countryRegion property: The object containing the country/region information.
     *
     * @return the countryRegion value.
     */
    public CountryRegion countryRegion() {
        return this.countryRegion;
    }

    /**
     * Get the ipAddress property: The IP Address of the request.
     *
     * @return the ipAddress value.
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (countryRegion() != null) {
            countryRegion().validate();
        }
    }
}
