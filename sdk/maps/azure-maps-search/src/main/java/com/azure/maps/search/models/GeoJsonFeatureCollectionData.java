// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The GeoJsonFeatureCollectionData model. */
@Fluent
public class GeoJsonFeatureCollectionData {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GeoJsonFeatureCollectionData.class);

    /*
     * Contains a list of valid `GeoJSON Feature` objects.
     */
    @JsonProperty(value = "features", required = true)
    private List<GeoJsonFeature> features;

    /**
     * Get the features property: Contains a list of valid `GeoJSON Feature` objects.
     *
     * @return the features value.
     */
    public List<GeoJsonFeature> features() {
        return this.features;
    }

    /**
     * Set the features property: Contains a list of valid `GeoJSON Feature` objects.
     *
     * @param features the features value to set.
     * @return the GeoJsonFeatureCollectionData object itself.
     */
    public GeoJsonFeatureCollectionData withFeatures(List<GeoJsonFeature> features) {
        this.features = features;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (features() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property features in model GeoJsonFeatureCollectionData"));
        } else {
            features().forEach(e -> e.validate());
        }
    }
}
