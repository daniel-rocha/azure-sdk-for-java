// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SearchPolygonResult model. */
@Fluent
public final class SearchPolygonResult {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SearchPolygonResult.class);

    /*
     * ID of the returned entity
     */
    @JsonProperty(value = "providerID", access = JsonProperty.Access.WRITE_ONLY)
    private String providerId;

    /*
     * Reason for the failure to obtain data for this provider.
     */
    @JsonProperty(value = "error", access = JsonProperty.Access.WRITE_ONLY)
    private String error;

    /*
     * Geometry data in GeoJSON format. Please refer to [RFC
     * 7946](https://tools.ietf.org/html/rfc7946) for details. Present only if
     * "error" is not present.
     */
    @JsonProperty(value = "geometryData")
    private GeoJsonObject geometryData;

    /**
     * Get the providerId property: ID of the returned entity.
     *
     * @return the providerId value.
     */
    public String providerId() {
        return this.providerId;
    }

    /**
     * Get the error property: Reason for the failure to obtain data for this provider.
     *
     * @return the error value.
     */
    public String error() {
        return this.error;
    }

    /**
     * Get the geometryData property: Geometry data in GeoJSON format. Please refer to [RFC
     * 7946](https://tools.ietf.org/html/rfc7946) for details. Present only if "error" is not present.
     *
     * @return the geometryData value.
     */
    public GeoJsonObject geometryData() {
        return this.geometryData;
    }

    /**
     * Set the geometryData property: Geometry data in GeoJSON format. Please refer to [RFC
     * 7946](https://tools.ietf.org/html/rfc7946) for details. Present only if "error" is not present.
     *
     * @param geometryData the geometryData value to set.
     * @return the SearchPolygonResult object itself.
     */
    public SearchPolygonResult withGeometryData(GeoJsonObject geometryData) {
        this.geometryData = geometryData;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (geometryData() != null) {
            geometryData().validate();
        }
    }
}
