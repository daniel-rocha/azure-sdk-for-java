// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.maps.search.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Details of the returned POI including information such as the name, phone, url address, and classifications. */
@Fluent
public final class SearchResultPoi {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SearchResultPoi.class);

    /*
     * Name of the POI property
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * Telephone number property
     */
    @JsonProperty(value = "phone", access = JsonProperty.Access.WRITE_ONLY)
    private String phone;

    /*
     * Website URL property
     */
    @JsonProperty(value = "url", access = JsonProperty.Access.WRITE_ONLY)
    private String url;

    /*
     * The list of the most specific POI categories
     */
    @JsonProperty(value = "categorySet", access = JsonProperty.Access.WRITE_ONLY)
    private List<SearchResultPoiCategorySet> categorySet;

    /*
     * __[Deprecated]__ Use classifications instead. Categories array
     */
    @JsonProperty(value = "categories", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> categories;

    /*
     * Classification array
     */
    @JsonProperty(value = "classifications", access = JsonProperty.Access.WRITE_ONLY)
    private List<SearchResultPoiClassification> classifications;

    /*
     * Brands array. The name of the brand for the POI being returned.
     */
    @JsonProperty(value = "brands", access = JsonProperty.Access.WRITE_ONLY)
    private List<SearchResultPoiBrand> brands;

    /*
     * Opening hours for a POI (Points of Interest).
     */
    @JsonProperty(value = "openingHours")
    private SearchResultPoiOpeningHours openingHours;

    /**
     * Get the name property: Name of the POI property.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the phone property: Telephone number property.
     *
     * @return the phone value.
     */
    public String phone() {
        return this.phone;
    }

    /**
     * Get the url property: Website URL property.
     *
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Get the categorySet property: The list of the most specific POI categories.
     *
     * @return the categorySet value.
     */
    public List<SearchResultPoiCategorySet> categorySet() {
        return this.categorySet;
    }

    /**
     * Get the categories property: __[Deprecated]__ Use classifications instead. Categories array.
     *
     * @return the categories value.
     */
    public List<String> categories() {
        return this.categories;
    }

    /**
     * Get the classifications property: Classification array.
     *
     * @return the classifications value.
     */
    public List<SearchResultPoiClassification> classifications() {
        return this.classifications;
    }

    /**
     * Get the brands property: Brands array. The name of the brand for the POI being returned.
     *
     * @return the brands value.
     */
    public List<SearchResultPoiBrand> brands() {
        return this.brands;
    }

    /**
     * Get the openingHours property: Opening hours for a POI (Points of Interest).
     *
     * @return the openingHours value.
     */
    public SearchResultPoiOpeningHours openingHours() {
        return this.openingHours;
    }

    /**
     * Set the openingHours property: Opening hours for a POI (Points of Interest).
     *
     * @param openingHours the openingHours value to set.
     * @return the SearchResultPoi object itself.
     */
    public SearchResultPoi withOpeningHours(SearchResultPoiOpeningHours openingHours) {
        this.openingHours = openingHours;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (categorySet() != null) {
            categorySet().forEach(e -> e.validate());
        }
        if (classifications() != null) {
            classifications().forEach(e -> e.validate());
        }
        if (brands() != null) {
            brands().forEach(e -> e.validate());
        }
        if (openingHours() != null) {
            openingHours().validate();
        }
    }
}
